{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asafe\\\\Documents\\\\react-doc-api\\\\doc-api\\\\src\\\\componentes\\\\esquerda\\\\pastas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../esquerda/pastas.css\";\nimport arrowDown from \"../images/arrow-down.svg\"; // Imagem para expandido\nimport arrowUp from \"../images/arrow-up.svg\"; // Imagem para recolhido\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pastas({\n  titulo,\n  children\n}) {\n  _s();\n  const [aberto, setAberto] = useState(false); // Controla o estado de expansão\n\n  // Alterna entre expandir e recolher\n  const toggleExpansor = () => {\n    setAberto(!aberto);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expansor\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleExpansor,\n      className: \"titulo-expansor\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: aberto ? arrowUp : arrowDown // Troca a seta conforme o estado\n        ,\n        alt: aberto ? \"Recolher\" : \"Expandir\",\n        style: {\n          marginRight: \"10px\"\n        } // Espaço entre a seta e o título\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), titulo]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), aberto && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conteudo-expansor\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Pastas, \"/ipzM5xJPh74gMb/pJdNKMvhqfQ=\");\n_c = Pastas;\nexport default Pastas;\nvar _c;\n$RefreshReg$(_c, \"Pastas\");","map":{"version":3,"names":["React","useState","arrowDown","arrowUp","jsxDEV","_jsxDEV","Pastas","titulo","children","_s","aberto","setAberto","toggleExpansor","className","onClick","src","alt","style","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Asafe/Documents/react-doc-api/doc-api/src/componentes/esquerda/pastas.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../esquerda/pastas.css\";\r\nimport arrowDown from \"../images/arrow-down.svg\"; // Imagem para expandido\r\nimport arrowUp from \"../images/arrow-up.svg\"; // Imagem para recolhido\r\n\r\nfunction Pastas({ titulo, children }) {\r\n  const [aberto, setAberto] = useState(false); // Controla o estado de expansão\r\n\r\n  // Alterna entre expandir e recolher\r\n  const toggleExpansor = () => {\r\n    setAberto(!aberto);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expansor\">\r\n      {/* Botão de título com a seta trocando */}\r\n      <button onClick={toggleExpansor} className=\"titulo-expansor\">\r\n        <img\r\n          src={aberto ? arrowUp : arrowDown} // Troca a seta conforme o estado\r\n          alt={aberto ? \"Recolher\" : \"Expandir\"}\r\n          style={{ marginRight: \"10px\" }} // Espaço entre a seta e o título\r\n        />\r\n        {titulo}\r\n      </button>\r\n\r\n      {/* Conteúdo expandido, só aparece se 'aberto' for true */}\r\n      {aberto && <div className=\"conteudo-expansor\">{children}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pastas;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,wBAAwB;AAC/B,OAAOC,SAAS,MAAM,0BAA0B,CAAC,CAAC;AAClD,OAAOC,OAAO,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,MAAMA,CAAC;EAAEC,MAAM;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE7C;EACA,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAC3BD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEL,OAAA;IAAKQ,SAAS,EAAC,UAAU;IAAAL,QAAA,gBAEvBH,OAAA;MAAQS,OAAO,EAAEF,cAAe;MAACC,SAAS,EAAC,iBAAiB;MAAAL,QAAA,gBAC1DH,OAAA;QACEU,GAAG,EAAEL,MAAM,GAAGP,OAAO,GAAGD,SAAU,CAAC;QAAA;QACnCc,GAAG,EAAEN,MAAM,GAAG,UAAU,GAAG,UAAW;QACtCO,KAAK,EAAE;UAAEC,WAAW,EAAE;QAAO,CAAE,CAAC;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC,EACDf,MAAM;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAGRZ,MAAM,iBAAIL,OAAA;MAAKQ,SAAS,EAAC,mBAAmB;MAAAL,QAAA,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV;AAACb,EAAA,CAxBQH,MAAM;AAAAiB,EAAA,GAANjB,MAAM;AA0Bf,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}